if [[ -e $ENABLE_THEMING && "$SHELL" == "/bin/zsh" ]]; then
    bold="$fg[red]"
    normal="$fg[blue]"
elif [ "$SHELL" == "/bin/bash" ]; then
    bold="$(tput bold)"
    normal="$(tput sgr0)"
fi

function info_for_app() {
  # https://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed
  # https://www.cyberciti.biz/faq/using-sed-to-delete-empty-lines/
  if [ -e $2 ]; then
    local ver_arg="--version"
  else
    local ver_arg=$2
  fi

  local ver=$($1 ${ver_arg} 2>&1 | sed -r '/^\s*$/d' | sed ':a;N;$!ba;s/\n/\n   /g')
  echo "${bold} $1:  ${normal} ${ver}"

  # clear normal
  echo -e "\033[0m"
}

alias_info() {
  echo "Alias Information:\n"

  echo "${bold}vi-rc:${normal} vi $HOME/.bashrc # or vi $HOME/.zshrc"
  echo "${bold}s-rc:${normal} source $HOME/.bashrc # or source $HOME/.zshrc"
  echo "${bold}c <env>:${normal} creates and activates new virtualenv with the name <env>"
  echo "${bold}a <env>:${normal} activates virtualenv with the name <env>"
  echo "${bold}v:${normal} lists installed virtual envs and Python versions"

  # clear normal
  echo -e "\033[0m"
}
